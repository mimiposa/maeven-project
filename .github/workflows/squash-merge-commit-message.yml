name: Auto Update PR Title to Follow Conventional Commits

on:
  pull_request:
    branches:
        - "main"
        - "develop"
        - "feature/*"
        - "release/*"
        - "bugfix/*"
        - "hotfix/*"
    types: [opened, reopened, edited]

jobs:
  update_pr_title:
    runs-on: ubuntu-latest
    steps:
      - name: Count commits in the PR
        id: count_commits
        run: |
          COMMITS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits \
                   | jq '. | length')
          echo "Number of commits: $COMMITS"
          echo "::set-output name=commits::$COMMITS"

      - name: Generate Conventional Commit Message Format
        if: steps.count_commits.outputs.commits > 1
        run: |
          # Extract branch name
          BRANCH_NAME=${{ github.event.pull_request.head.ref }}

          # Determine commit type based on the branch name
          if [[ "$BRANCH_NAME" == feature/* ]]; then
            COMMIT_TYPE="feat"
          elif [[ "$BRANCH_NAME" == bugfix/* || "$BRANCH_NAME" == hotfix/* ]]; then
            COMMIT_TYPE="fix"
          elif [[ "$BRANCH_NAME" == release/* ]]; then
            COMMIT_TYPE="release"
          else
            COMMIT_TYPE="chore"
          fi

          # Generate the new PR title using Conventional Commit format
          PR_TITLE="${COMMIT_TYPE}: ${{ github.event.pull_request.title }}"

          echo "New PR title: $PR_TITLE"

          # Update the PR title with the new Conventional Commit message format
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
            -d "{\"title\":\"$PR_TITLE\"}"
